{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Navigation_01",
  "type": "registry:block",
  "title": "Navigation_01",
  "description": "Navigation_01 is a responsive, animated React navigation bar with expandable dropdowns, scroll-aware shrinking, staggered item animations, and customizable glassmorphic styling",
  "files": [
    {
      "path": "resistry/blocs/navigations/Navigation_01.tsx",
      "content": "\"use client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Icon12Hours,\r\n  Icon2fa,\r\n  Icon360,\r\n  Icon3dCubeSphereOff,\r\n  IconAi,\r\n  IconArrowDown,\r\n  IconClock12,\r\n  IconCrop169Filled,\r\n  IconDice1Filled,\r\n  IconH1,\r\n  IconInfoSquare,\r\n  IconLayoutDashboardFilled,\r\n  IconWifi1,\r\n  IconMenu2,\r\n  IconX,\r\n} from \"@tabler/icons-react\";\r\nimport Link from \"next/link\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport {\r\n  AnimatePresence,\r\n  motion,\r\n  useMotionValueEvent,\r\n  useScroll,\r\n  Variants,\r\n} from \"motion/react\";\r\n\r\ntype NavItem = {\r\n  title: string;\r\n  href: string;\r\n  isExpand?: boolean;\r\n  isExpandElem?: ExpandElem[];\r\n};\r\n\r\ntype ExpandElem = {\r\n  title: string;\r\n  description: string;\r\n  icon: React.ReactElement;\r\n};\r\n\r\nconst NavItems: NavItem[] = [\r\n  {\r\n    title: \"products\",\r\n    href: \"#\",\r\n    isExpand: true,\r\n    isExpandElem: [\r\n      {\r\n        title: \"Lightning Fast\",\r\n        description: \"Experience ultra-responsive performance.\",\r\n        icon: <Icon12Hours />,\r\n      },\r\n      {\r\n        title: \"Future Ready\",\r\n        description: \"Designed to adapt and scale with your needs.\",\r\n        icon: <Icon360 />,\r\n      },\r\n      {\r\n        title: \"Auto Backup\",\r\n        description: \"Never lose your progress â€” everything is saved.\",\r\n        icon: <IconH1 />,\r\n      },\r\n      {\r\n        title: \"One-Click Setup\",\r\n        description: \"Start instantly without wasting time on configs.\",\r\n        icon: <Icon3dCubeSphereOff />,\r\n      },\r\n      {\r\n        title: \"Cloud Connected\",\r\n        description: \"Access your data from anywhere, anytime.\",\r\n        icon: <IconDice1Filled />,\r\n      },\r\n      {\r\n        title: \"Customizable\",\r\n        description: \"Tune every detail to match your workflow.\",\r\n        icon: <IconWifi1 />,\r\n      },\r\n      {\r\n        title: \"Collaboration Ready\",\r\n        description: \"Work together with your team in real time.\",\r\n        icon: <Icon2fa />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"solutions\",\r\n    href: \"#\",\r\n    isExpand: true,\r\n    isExpandElem: [\r\n      {\r\n        title: \"AI Powered\",\r\n        description: \"Let artificial intelligence do the heavy lifting.\",\r\n        icon: <IconClock12 />,\r\n      },\r\n      {\r\n        title: \"Lightning Fast\",\r\n        description: \"Experience ultra-responsive performance.\",\r\n        icon: <IconAi />,\r\n      },\r\n      {\r\n        title: \"Cloud Connected\",\r\n        description: \"Access everything from anywhere, instantly.\",\r\n        icon: <IconInfoSquare />,\r\n      },\r\n      {\r\n        title: \"Secure by Design\",\r\n        description: \"Your data stays private with end-to-end protection.\",\r\n        icon: <IconCrop169Filled />,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"pricing\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    title: \"company\",\r\n    href: \"#\",\r\n  },\r\n];\r\n\r\nconst containerVariants: Variants = {\r\n  hidden: {\r\n    transition: {\r\n      staggerChildren: 0.03,\r\n      staggerDirection: -1,\r\n    },\r\n  },\r\n  show: {\r\n    transition: {\r\n      staggerChildren: 0.05,\r\n      delayChildren: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\nconst itemVariants: Variants = {\r\n  hidden: {\r\n    opacity: 0,\r\n    y: -10,\r\n    transition: {\r\n      duration: 0.2,\r\n      ease: [0.4, 0, 0.2, 1],\r\n    },\r\n  },\r\n  show: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      duration: 0.3,\r\n      ease: [0.25, 0.1, 0.25, 1],\r\n    },\r\n  },\r\n};\r\n\r\nconst HOVER_CLOSE_DELAY = 150;\r\n\r\nconst Navigation_01: React.FC = () => {\r\n  const [activeItem, setActiveItem] = useState<string | null>(null);\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState<boolean>(false);\r\n  const closeTimerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  const clearCloseTimer = (): void => {\r\n    if (closeTimerRef.current) {\r\n      clearTimeout(closeTimerRef.current);\r\n      closeTimerRef.current = null;\r\n    }\r\n  };\r\n\r\n  const scheduleClose = (delay: number = HOVER_CLOSE_DELAY): void => {\r\n    clearCloseTimer();\r\n    closeTimerRef.current = setTimeout(() => {\r\n      setActiveItem(null);\r\n      closeTimerRef.current = null;\r\n    }, delay);\r\n  };\r\n\r\n  const [scrolled, setScroll] = useState<boolean>(false);\r\n\r\n  const { scrollY } = useScroll();\r\n\r\n  useMotionValueEvent(scrollY, \"change\", (latest) => {\r\n    if (latest > 20) {\r\n      setScroll(true);\r\n    } else {\r\n      setScroll(false);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <motion.header\r\n      initial={{\r\n        width: \"100%\",\r\n        y: \"0px\",\r\n        paddingLeft: \"13vw\",\r\n        paddingRight: \"13vw\",\r\n      }}\r\n      animate={{\r\n        width: scrolled ? \"70%\" : \"100%\",\r\n        borderRadius: scrolled ? \"15px\" : \"0px\",\r\n        y: scrolled ? \"15px\" : \"0px\",\r\n        paddingLeft: scrolled ? \"20px\" : \"13vw\",\r\n        paddingRight: scrolled ? \"20px\" : \"13vw\",\r\n      }}\r\n      transition={{\r\n        duration: 0.3,\r\n        ease: [0.4, 0, 0.2, 1],\r\n      }}\r\n      className={cn(\r\n        \"bg-background w-screen min-h-12 py-3 flex flex-col sticky top-0 mx-auto\",\r\n        `${scrolled ? \"shadow-ahs\" : \"border-b border-primary/20\"}`,\r\n        \"transition-all duration-100 [transition-timing-function:cubic-bezier(.4, 0, .2, 1)]\",\r\n        \"max-md:!w-full max-md:!px-5 max-md:!rounded-none\"\r\n      )}\r\n    >\r\n      <nav className=\"flex items-center justify-between w-full\">\r\n        <div className=\"flex gap-10 items-center max-lg:gap-5\">\r\n          <Logo />\r\n          <div className=\"hidden lg:flex gap-10 items-center\">\r\n            {NavItems.map((itm) => (\r\n              <div key={itm.title}>\r\n                {itm.isExpand ? (\r\n                  <div\r\n                    onMouseEnter={() => {\r\n                      clearCloseTimer();\r\n                      setActiveItem(itm.title);\r\n                    }}\r\n                    onMouseLeave={() => scheduleClose()}\r\n                    className=\"capitalize cursor-pointer hover:text-primary/70 transition-colors\"\r\n                  >\r\n                    <h1 className=\"flex items-center gap-1\">\r\n                      {itm.title}\r\n                      <span>\r\n                        <IconArrowDown className=\"size-3 text-primary/50\" />\r\n                      </span>\r\n                    </h1>\r\n                  </div>\r\n                ) : (\r\n                  <Link\r\n                    href={itm.href}\r\n                    className=\"capitalize cursor-pointer hover:text-primary/70 transition-colors\"\r\n                  >\r\n                    <h1>{itm.title}</h1>\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"hidden md:flex gap-3 items-center\">\r\n          <button className=\"py-2 px-4 rounded-md border-primary/20 cursor-pointer border-[.5px] text-primary\">\r\n            Login\r\n          </button>\r\n          <button className=\"bg-purple-600 text-white hover:bg-purple-700 py-2 px-4 rounded-md cursor-pointer\">\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\r\n          className=\"lg:hidden p-2 text-primary\"\r\n        >\r\n          {mobileMenuOpen ? <IconX size={24} /> : <IconMenu2 size={24} />}\r\n        </button>\r\n      </nav>\r\n\r\n      <div className=\"relative hidden lg:block\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {activeItem && (\r\n            <ExpandElementWrapper\r\n              key={activeItem}\r\n              activeItemTitle={activeItem}\r\n              onEnter={clearCloseTimer}\r\n              onLeave={() => scheduleClose()}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      <AnimatePresence>\r\n        {mobileMenuOpen && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: \"auto\", opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"lg:hidden overflow-hidden\"\r\n          >\r\n            <div className=\"flex flex-col gap-4 pt-4 pb-2\">\r\n              {NavItems.map((itm) => (\r\n                <div key={itm.title}>\r\n                  {itm.isExpand ? (\r\n                    <div>\r\n                      <h2 className=\"capitalize font-semibold text-primary/90 mb-2\">\r\n                        {itm.title}\r\n                      </h2>\r\n                      <div className=\"flex flex-col gap-2 pl-4\">\r\n                        {itm.isExpandElem?.map((elem, idx) => (\r\n                          <div\r\n                            key={idx}\r\n                            className=\"py-2 cursor-pointer hover:text-primary/70\"\r\n                          >\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <div className=\"text-primary/60\">{elem.icon}</div>\r\n                              <span className=\"text-sm\">{elem.title}</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <Link\r\n                      href={itm.href}\r\n                      className=\"capitalize cursor-pointer hover:text-primary/70 block py-2\"\r\n                      onClick={() => setMobileMenuOpen(false)}\r\n                    >\r\n                      <h1>{itm.title}</h1>\r\n                    </Link>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <div className=\"flex flex-col gap-2 pt-2 border-t border-primary/20\">\r\n                <button className=\"w-full py-2 px-4 rounded-md border-primary/20 cursor-pointer border-[.5px] text-primary\">\r\n                  Login\r\n                </button>\r\n                <button className=\"w-full bg-purple-600 text-white hover:bg-purple-700 py-2 px-4 rounded-md cursor-pointer\">\r\n                  Sign Up\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.header>\r\n  );\r\n};\r\n\r\nexport default Navigation_01;\r\n\r\ninterface ExpandElementWrapperProps {\r\n  activeItemTitle: string;\r\n  onEnter: () => void;\r\n  onLeave: () => void;\r\n}\r\n\r\nconst ExpandElementWrapper: React.FC<ExpandElementWrapperProps> = ({\r\n  activeItemTitle,\r\n  onEnter,\r\n  onLeave,\r\n}) => {\r\n  const currentItem = NavItems.find((i) => i.title === activeItemTitle);\r\n\r\n  if (!currentItem?.isExpandElem) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, height: 0 }}\r\n      animate={{ opacity: 1, height: \"auto\" }}\r\n      exit={{ opacity: 0, height: 0 }}\r\n      transition={{\r\n        duration: 0.3,\r\n        ease: [0.4, 0, 0.2, 1],\r\n        height: { duration: 0.25 },\r\n      }}\r\n      className=\"w-full overflow-hidden\"\r\n      onMouseEnter={onEnter}\r\n      onMouseLeave={onLeave}\r\n    >\r\n      <motion.div\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"show\"\r\n        exit=\"hidden\"\r\n        className=\"grid grid-cols-3 gap-4 pt-6 pb-4 bg-white/30 backdrop-blur-lg border border-white/20 rounded-xl shadow-lg max-xl:grid-cols-2 max-lg:grid-cols-1\"\r\n      >\r\n        {currentItem.isExpandElem.map((elem, n) => (\r\n          <motion.div\r\n            key={n}\r\n            variants={itemVariants}\r\n            className=\"p-4 rounded-lg hover:bg-primary/5 transition-colors cursor-pointer group\"\r\n          >\r\n            <div className=\"flex items-start gap-3\">\r\n              <div className=\"text-primary/60 group-hover:text-primary transition-colors mt-1\">\r\n                {elem.icon}\r\n              </div>\r\n              <div>\r\n                <h3 className=\"font-semibold text-primary/90 mb-1\">\r\n                  {elem.title}\r\n                </h3>\r\n                <p className=\"text-sm text-primary/60\">{elem.description}</p>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst Logo: React.FC = () => {\r\n  return (\r\n    <div className=\"text-xl font-bold flex items-center gap-2 cursor-pointer max-sm:text-lg\">\r\n      <IconLayoutDashboardFilled className=\"text-ahs max-sm:size-5\" />\r\n      <h1 className=\"text-primary/85\">AHs Lab</h1>\r\n    </div>\r\n  );\r\n};",
      "type": "registry:component",
      "target": "components/Lab/Navigation_01.tsx"
    }
  ]
}