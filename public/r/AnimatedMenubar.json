{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "AnimatedMenubar",
  "type": "registry:component",
  "title": "Animated Menubar",
  "description": "Animated and cool Menubar effect with animated dropdown",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "resistry/AnimatedMenubar.tsx",
      "content": "\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  AnimatePresence,\r\n  motion,\r\n  TargetAndTransition,\r\n} from \"motion/react\";\r\nimport Link from \"next/link\";\r\n\r\nconst NavLinks = [\r\n  {\r\n    title: \"Home\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    title: \"Projects\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    title: \"Docs\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    title: \"Blogs\",\r\n    href: \"/\",\r\n  },\r\n];\r\n\r\nconst NavFooterLinks = [\r\n  {\r\n    title: \"Facebook\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    title: \"Twitter\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    title: \"Instragram\",\r\n    href: \"/\",\r\n  },\r\n  {\r\n    title: \"Github\",\r\n    href: \"/\",\r\n  },\r\n];\r\n\r\nconst Header = () => {\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  return (\r\n    <header className=\"fixed top-[50px] right-[50px]\">\r\n      <Menu isActive={isActive} />\r\n      <div\r\n        onClick={() => setIsActive(!isActive)}\r\n        className=\"h-[40px] w-[100px] rounded-[25px] cursor-pointer absolute top-0 right-0 uppercase font-medium overflow-hidden\"\r\n      >\r\n        <motion.div\r\n          className=\" h-full w-full absolute top-0 left-0 \"\r\n          animate={{\r\n            top: isActive ? \"-100%\" : \"0\",\r\n          }}\r\n          transition={{\r\n            duration: 0.5,\r\n            ease: [0.76, 0, 0.24, 1],\r\n          }}\r\n        >\r\n          <div className=\"h-full w-full bg-[#C9FD74] flex items-center justify-center text-black\">\r\n            <ParspectiveText label=\"Menu\" />\r\n          </div>\r\n          <div className=\"h-full w-full flex items-center justify-center absolute top-[100%] bg-black text-white\">\r\n            <ParspectiveText label=\"Close\" />\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\nconst ParspectiveText = ({ label }: { label: string }) => {\r\n  return (\r\n    <div className=\"w-full h-full justify-center items-center flex transition-all duration-700 ease-in-out hover:rotate-x-[90deg] transform-3d group \">\r\n      <p className=\"group-hover:translate-y-[-100%] transition-all duration-700 ease-in-out hover:rotate-x-[90deg] transform-3d group-hover:opacity-0\">\r\n        {label}\r\n      </p>\r\n      <p className=\"absolute rotate-x-[-90deg] group-hover:opacity-100\">\r\n        {label}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Menu = ({ isActive }: { isActive: boolean }) => {\r\n  const variants = {\r\n    open: {\r\n      width: 480,\r\n      height: 650,\r\n      top: \"-25px\",\r\n      right: \"-25px\",\r\n    },\r\n    closed: {\r\n      width: 100,\r\n      height: 40,\r\n      top: \"0px\",\r\n      right: \"0px\",\r\n      transition: { delay: 0.35 },\r\n    },\r\n  };\r\n  return (\r\n    <motion.div\r\n      variants={variants}\r\n      animate={isActive ? \"open\" : \"closed\"}\r\n      transition={{\r\n        duration: 0.75,\r\n        ease: [0.76, 0, 0.24, 1],\r\n      }}\r\n      className=\"w-[480px] h-[650px] bg-[#C9FD74] rounded-[25px] relative text-black\"\r\n    >\r\n      <AnimatePresence>{!!isActive && <Nav />}</AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\ntype DynamicVariants = {\r\n  [key: string]: TargetAndTransition | ((idx: number) => TargetAndTransition);\r\n};\r\n\r\nconst Parspective: DynamicVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n    rotateX: 90,\r\n    translateY: 80,\r\n    translateX: -90,\r\n  },\r\n  enter: (idx: number) => ({\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5 + idx * 0.1,\r\n      duration: 0.65,\r\n      opacity: {\r\n        duration: 0.35,\r\n        delay: 0.7,\r\n      },\r\n      ease: [0.215, 0.61, 0.355, 1],\r\n    },\r\n    rotateX: 0,\r\n    translateY: 0,\r\n    translateX: 0,\r\n  }),\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.5,\r\n      ease: [0.76, 0, 0.24, 1],\r\n    },\r\n  },\r\n};\r\n\r\nconst Slide: DynamicVariants = {\r\n  initial: {\r\n    opacity: 0,\r\n    y: 20,\r\n  },\r\n  enter: (idx: number) => ({\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      delay: 0.5 + idx * 0.1,\r\n      duration: 0.75,\r\n      ease: [0.215, 0.61, 0.355, 1],\r\n    },\r\n  }),\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.5,\r\n      ease: [0.76, 0, 0.24, 1],\r\n    },\r\n  },\r\n};\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"h-full p-[100px] px-[40px] pb-[50px] box-border flex flex-col justify-between\">\r\n      <div>\r\n        {NavLinks.map((itm, idx) => (\r\n          <div\r\n            key={idx}\r\n            className=\"perspective-[120px] perspective-origin-bottom\"\r\n          >\r\n            <motion.div\r\n              custom={idx}\r\n              variants={Parspective}\r\n              animate=\"enter\"\r\n              exit=\"exit\"\r\n              initial=\"initial\"\r\n              className=\"flex flex-col gap-[1px]\"\r\n            >\r\n              <Link\r\n                href={itm.href}\r\n                className=\"text-black text-[46px] font-semibold\"\r\n              >\r\n                {itm.title}\r\n              </Link>\r\n            </motion.div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        {NavFooterLinks.map((itm, idx) => (\r\n          <motion.div\r\n            key={idx}\r\n            custom={idx}\r\n            variants={Slide}\r\n            animate=\"enter\"\r\n            exit=\"exit\"\r\n            initial=\"initial\"\r\n            className=\"flex justify-between items-center\"\r\n          >\r\n            <Link href={itm.href} className=\"text-xl font-medium\">\r\n              {itm.title}\r\n            </Link>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n",
      "type": "registry:component",
      "target": "components/AHs/AnimatedMenubar.tsx"
    }
  ]
}